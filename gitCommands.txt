git config: set your user name and email in the main configuration file.

git init: create a new local repository for a new or existing project.
How to : git init in the root of your project directory.

git clone: create a working copy of a local repository:.
How to : git clone /path/to/repository

git status: to check the status of files you’ve changed in your working directory, i.e, what all has changed since your last commit.
How to : git status in your working directory. lists out all the files that have been changed.

git add: Add one or more files to staging (index)
How to : git add <filename>

git commit: commits your changes and sets it to new commit object for your remote.
How to : git commit -m”sweet little commit message”

git push/git pull: push or pull your changes to remote. If you have added and committed your changes and you want to push them. Or if your remote has updated and you want those latest changes.
How to : git pull <:remote:> <:branch:> and git push <:remote:> <:branch:>

git status: List the files you've changed 
how to: git status

git diff: review the difference between the changes made on a file.

.gitignore file: is a text file that tells Git which files or folders to ignore in a project.
A local .gitignore file is usually placed in the root directory of a project. You can also create a global .gitignore file and any entries in that file will be ignored in all of your Git repositories.

To create a local .gitignore file, create a text file and name it .gitignore (remember to include the . at the beginning). Then edit this file as needed. Each new line should list an additional file or folder that you want Git to ignore.

* is used as a wildcard match
/ is used to ignore pathnames relative to the .gitignore file
# is used to add comments to a .gitignore file

This is an example of what the .gitignore file could look like:

# Ignore Mac system files
.DS_store

# Ignore node_modules folder
node_modules

# Ignore all text files
*.txt

# Ignore files related to API keys
.env

# Ignore SASS config files
.sass-cache

To add or change your global .gitignore file, run the following command:

git config --global core.excludesfile ~/.gitignore_global

This will create the file ~/.gitignore_global. Now you can edit that file the same way as a local .gitignore file. All of your Git repositories will ignore the files and folders listed in the global .gitignore file.


purpose of .gitignore:
- Any files containing passwords or authentication keys
- Any folders that contain development version, such as if you're using jekyll you can ignore the _site folder
- Any folders where dependencies are installed (i.e. node_modules, vendor,__pycache__/, etc)
- Any compiled executables (unless you're specifically tracking the compiled version. So that means ignore .class files for java projects, .pyc, .ipynb_checkpoints and so on)

